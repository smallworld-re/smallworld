info = {
    # *** General purpose registers ***
    "x0": ("x0", (0, 8)),
    "w0": ("x0", (0, 4)),
    "x1": ("x1", (0, 8)),
    "w1": ("x1", (0, 4)),
    "x2": ("x2", (0, 8)),
    "w2": ("x2", (0, 4)),
    "x3": ("x3", (0, 8)),
    "w3": ("x3", (0, 4)),
    "x4": ("x4", (0, 8)),
    "w4": ("x4", (0, 4)),
    "x5": ("x5", (0, 8)),
    "w5": ("x5", (0, 4)),
    "x6": ("x6", (0, 8)),
    "w6": ("x6", (0, 4)),
    "x7": ("x7", (0, 8)),
    "w7": ("x7", (0, 4)),
    "x8": ("x8", (0, 8)),
    "w8": ("x8", (0, 4)),
    "x9": ("x9", (0, 8)),
    "w9": ("x9", (0, 4)),
    "x10": ("x10", (0, 8)),
    "w10": ("x10", (0, 4)),
    "x11": ("x11", (0, 8)),
    "w11": ("x11", (0, 4)),
    "x12": ("x12", (0, 8)),
    "w12": ("x12", (0, 4)),
    "x13": ("x13", (0, 8)),
    "w13": ("x13", (0, 4)),
    "x14": ("x14", (0, 8)),
    "w14": ("x14", (0, 4)),
    "x15": ("x15", (0, 8)),
    "w15": ("x15", (0, 4)),
    "x16": ("x16", (0, 8)),
    "w16": ("x16", (0, 4)),
    "x17": ("x17", (0, 8)),
    "w17": ("x17", (0, 4)),
    "x18": ("x18", (0, 8)),
    "w18": ("x18", (0, 4)),
    "x19": ("x19", (0, 8)),
    "w19": ("x19", (0, 4)),
    "x20": ("x20", (0, 8)),
    "w20": ("x20", (0, 4)),
    "x21": ("x21", (0, 8)),
    "w21": ("x21", (0, 4)),
    "x22": ("x22", (0, 8)),
    "w22": ("x22", (0, 4)),
    "x23": ("x23", (0, 8)),
    "w23": ("x23", (0, 4)),
    "x24": ("x24", (0, 8)),
    "w24": ("x24", (0, 4)),
    "x25": ("x25", (0, 8)),
    "w25": ("x25", (0, 4)),
    "x26": ("x26", (0, 8)),
    "w26": ("x26", (0, 4)),
    "x27": ("x27", (0, 8)),
    "w27": ("x27", (0, 4)),
    "x28": ("x28", (0, 8)),
    "w28": ("x28", (0, 4)),
    "x29": ("x29", (0, 8)),
    "w29": ("x29", (0, 4)),
    "x30": ("x30", (0, 8)),
    "w30": ("x30", (0, 4)),
    # Program Counter
    "pc": ("pc", (0, 8)),
    # Stack Pointer
    "sp": ("sp", (0, 8)),
    "wsp": ("sp", (0, 4)),
    # Frame Pointer
    "fp": ("x29", (0, 8)),
    # Link Register
    "lr": ("x30", (0, 8)),
    # Zero Register
    "xzr": ("xzr", (0, 8)),
    "wzr": ("xzr", (0, 4)),
    # *** System Control Registers ***
    # NOTE: "_elX" indicates that only exception level X or greater can access this register.
    # NOTE: This list is far from complete; it only covers what Unicorn supports
    # Condition Code Register
    "fpcr": ("fpcr", (0, 8)),
    # Floating Point Status Register
    "fpsr": ("fpsr", (0, 8)),
    # Banked stack pointers for exception handlers
    "sp_el0": ("sp_el0", (0, 8)),
    "sp_el1": ("sp_el1", (0, 8)),
    "sp_el2": ("sp_el2", (0, 8)),
    "sp_el3": ("sp_el3", (0, 8)),
    # Banked link regiusters for exception handlers
    # NOTE: Unicorn thinks there's an elr_el0; according to docs, it doesn't exist
    "elr_el1": ("elr_el1", (0, 8)),
    "elr_el2": ("elr_el2", (0, 8)),
    "elr_el3": ("elr_el3", (0, 8)),
    # Banked exception syndrome registers for exception handlers
    # NOTE: Unicorn thinks there's a far_el0; according to docs, it doesn't exist
    "far_el1": ("far_el1", (0, 8)),
    "far_el2": ("far_el2", (0, 8)),
    "far_el3": ("far_el3", (0, 8)),
    # Banked vector base address registers for exception handlers
    # NOTE: vbar_el0 doesn't exist in angr.
    # Since vbar_el0 and el1 are aliases for each other, vbar_el1 must be the "real" register.
    "vbar_el1": ("vbar_el1", (0, 8)),
    "vbar_el0": ("vbar_el0", (0, 8)),
    "vbar_el2": ("vbar_el2", (0, 8)),
    "vbar_el3": ("vbar_el3", (0, 8)),
    # Coprocessor access control register
    "cpacr_el1": ("cpacr_el1", (0, 8)),
    # Memory Attribute Indirection Register
    "mair_el1": ("mair_el1", (0, 8)),
    # Physical Address Register
    "par_el1": ("par_el1", (0, 8)),
    # Translation Table Zero Base Register
    "ttbr0_el1": ("ttbr0_el1", (0, 8)),
    # Translation Table One Base Register
    "ttbr1_el1": ("ttbr1_el1", (0, 8)),
    # Thread ID Register
    # NOTE: According to docs, there should be an el2 and el3 copy, too.
    "tpidr_el0": ("tpidr_el0", (0, 8)),
    "tpidr_el1": ("tpidr_el1", (0, 8)),
    # Userspace-visible Thread ID register
    "tpidrro_el0": ("tpidrro_el0", (0, 8)),
    # *** Floating Point Registers ***
    # Scalar Floating Point Registers
    "q0": ("q0", (0, 16)),
    "d0": ("q0", (0, 8)),
    "s0": ("q0", (0, 4)),
    "h0": ("q0", (0, 2)),
    "b0": ("q0", (0, 1)),
    "q1": ("q1", (0, 16)),
    "d1": ("q1", (0, 8)),
    "s1": ("q1", (0, 4)),
    "h1": ("q1", (0, 2)),
    "b1": ("q1", (0, 1)),
    "q2": ("q2", (0, 16)),
    "d2": ("q2", (0, 8)),
    "s2": ("q2", (0, 4)),
    "h2": ("q2", (0, 2)),
    "b2": ("q2", (0, 1)),
    "q3": ("q3", (0, 16)),
    "d3": ("q3", (0, 8)),
    "s3": ("q3", (0, 4)),
    "h3": ("q3", (0, 2)),
    "b3": ("q3", (0, 1)),
    "q4": ("q4", (0, 16)),
    "d4": ("q4", (0, 8)),
    "s4": ("q4", (0, 4)),
    "h4": ("q4", (0, 2)),
    "b4": ("q4", (0, 1)),
    "q5": ("q5", (0, 16)),
    "d5": ("q5", (0, 8)),
    "s5": ("q5", (0, 4)),
    "h5": ("q5", (0, 2)),
    "b5": ("q5", (0, 1)),
    "q6": ("q6", (0, 16)),
    "d6": ("q6", (0, 8)),
    "s6": ("q6", (0, 4)),
    "h6": ("q6", (0, 2)),
    "b6": ("q6", (0, 1)),
    "q7": ("q7", (0, 16)),
    "d7": ("q7", (0, 8)),
    "s7": ("q7", (0, 4)),
    "h7": ("q7", (0, 2)),
    "b7": ("q7", (0, 1)),
    "q8": ("q8", (0, 16)),
    "d8": ("q8", (0, 8)),
    "s8": ("q8", (0, 4)),
    "h8": ("q8", (0, 2)),
    "b8": ("q8", (0, 1)),
    "q9": ("q9", (0, 16)),
    "d9": ("q9", (0, 8)),
    "s9": ("q9", (0, 4)),
    "h9": ("q9", (0, 2)),
    "b9": ("q9", (0, 1)),
    "q10": ("q10", (0, 16)),
    "d10": ("q10", (0, 8)),
    "s10": ("q10", (0, 4)),
    "h10": ("q10", (0, 2)),
    "b10": ("q10", (0, 1)),
    "q11": ("q11", (0, 16)),
    "d11": ("q11", (0, 8)),
    "s11": ("q11", (0, 4)),
    "h11": ("q11", (0, 2)),
    "b11": ("q11", (0, 1)),
    "q12": ("q12", (0, 16)),
    "d12": ("q12", (0, 8)),
    "s12": ("q12", (0, 4)),
    "h12": ("q12", (0, 2)),
    "b12": ("q12", (0, 1)),
    "q13": ("q13", (0, 16)),
    "d13": ("q13", (0, 8)),
    "s13": ("q13", (0, 4)),
    "h13": ("q13", (0, 2)),
    "b13": ("q13", (0, 1)),
    "q14": ("q14", (0, 16)),
    "d14": ("q14", (0, 8)),
    "s14": ("q14", (0, 4)),
    "h14": ("q14", (0, 2)),
    "b14": ("q14", (0, 1)),
    "q15": ("q15", (0, 16)),
    "d15": ("q15", (0, 8)),
    "s15": ("q15", (0, 4)),
    "h15": ("q15", (0, 2)),
    "b15": ("q15", (0, 1)),
    "q16": ("q16", (0, 16)),
    "d16": ("q16", (0, 8)),
    "s16": ("q16", (0, 4)),
    "h16": ("q16", (0, 2)),
    "b16": ("q16", (0, 1)),
    "q17": ("q17", (0, 16)),
    "d17": ("q17", (0, 8)),
    "s17": ("q17", (0, 4)),
    "h17": ("q17", (0, 2)),
    "b17": ("q17", (0, 1)),
    "q18": ("q18", (0, 16)),
    "d18": ("q18", (0, 8)),
    "s18": ("q18", (0, 4)),
    "h18": ("q18", (0, 2)),
    "b18": ("q18", (0, 1)),
    "q19": ("q19", (0, 16)),
    "d19": ("q19", (0, 8)),
    "s19": ("q19", (0, 4)),
    "h19": ("q19", (0, 2)),
    "b19": ("q19", (0, 1)),
    "q20": ("q20", (0, 16)),
    "d20": ("q20", (0, 8)),
    "s20": ("q20", (0, 4)),
    "h20": ("q20", (0, 2)),
    "b20": ("q20", (0, 1)),
    "q21": ("q21", (0, 16)),
    "d21": ("q21", (0, 8)),
    "s21": ("q21", (0, 4)),
    "h21": ("q21", (0, 2)),
    "b21": ("q21", (0, 1)),
    "q22": ("q22", (0, 16)),
    "d22": ("q22", (0, 8)),
    "s22": ("q22", (0, 4)),
    "h22": ("q22", (0, 2)),
    "b22": ("q22", (0, 1)),
    "q23": ("q23", (0, 16)),
    "d23": ("q23", (0, 8)),
    "s23": ("q23", (0, 4)),
    "h23": ("q23", (0, 2)),
    "b23": ("q23", (0, 1)),
    "q24": ("q24", (0, 16)),
    "d24": ("q24", (0, 8)),
    "s24": ("q24", (0, 4)),
    "h24": ("q24", (0, 2)),
    "b24": ("q24", (0, 1)),
    "q25": ("q25", (0, 16)),
    "d25": ("q25", (0, 8)),
    "s25": ("q25", (0, 4)),
    "h25": ("q25", (0, 2)),
    "b25": ("q25", (0, 1)),
    "q26": ("q26", (0, 16)),
    "d26": ("q26", (0, 8)),
    "s26": ("q26", (0, 4)),
    "h26": ("q26", (0, 2)),
    "b26": ("q26", (0, 1)),
    "q27": ("q27", (0, 16)),
    "d27": ("q27", (0, 8)),
    "s27": ("q27", (0, 4)),
    "h27": ("q27", (0, 2)),
    "b27": ("q27", (0, 1)),
    "q28": ("q28", (0, 16)),
    "d28": ("q28", (0, 8)),
    "s28": ("q28", (0, 4)),
    "h28": ("q28", (0, 2)),
    "b28": ("q28", (0, 1)),
    "q29": ("q29", (0, 16)),
    "d29": ("q29", (0, 8)),
    "s29": ("q29", (0, 4)),
    "h29": ("q29", (0, 2)),
    "b29": ("q29", (0, 1)),
    "q30": ("q30", (0, 16)),
    "d30": ("q30", (0, 8)),
    "s30": ("q30", (0, 4)),
    "h30": ("q30", (0, 2)),
    "b30": ("q30", (0, 1)),
    "q31": ("q31", (0, 16)),
    "d31": ("q31", (0, 8)),
    "s31": ("q31", (0, 4)),
    "h31": ("q31", (0, 2)),
    "b31": ("q31", (0, 1)),
    # Vector registers
    # TODO: Figure out how to model these
}
