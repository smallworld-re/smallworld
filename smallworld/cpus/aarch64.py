from ..state import CPU, Register, RegisterAlias


class AArch64CPUState(CPU):
    """Auto-generated CPU state for aarch64:v8a:little

    Generated from Pcode language AARCH64:LE:64:v8A,
    and Unicorn package unicorn.arm64_const
    """

    arch = "aarch64"
    mode = "v8a"
    byteorder = "little"

    # Special registers:
    # x29: frame pointer
    # x30: link register
    # x31: stack pointer or zero, depending on instruction
    GENERAL_PURPOSE_REGS = [f"x{i}" for i in range(0, 29)]

    def __init__(self):
        # *** General Purpose Registers ***
        self.x0 = Register("x0", width=8)
        self.w0 = RegisterAlias("w0", self.x0, width=4, offset=0)
        self.x1 = Register("x1", width=8)
        self.w1 = RegisterAlias("w1", self.x1, width=4, offset=0)
        self.x2 = Register("x2", width=8)
        self.w2 = RegisterAlias("w2", self.x2, width=4, offset=0)
        self.x3 = Register("x3", width=8)
        self.w3 = RegisterAlias("w3", self.x3, width=4, offset=0)
        self.x4 = Register("x4", width=8)
        self.w4 = RegisterAlias("w4", self.x4, width=4, offset=0)
        self.x5 = Register("x5", width=8)
        self.w5 = RegisterAlias("w5", self.x5, width=4, offset=0)
        self.x6 = Register("x6", width=8)
        self.w6 = RegisterAlias("w6", self.x6, width=4, offset=0)
        self.x7 = Register("x7", width=8)
        self.w7 = RegisterAlias("w7", self.x7, width=4, offset=0)
        self.x8 = Register("x8", width=8)
        self.w8 = RegisterAlias("w8", self.x8, width=4, offset=0)
        self.x9 = Register("x9", width=8)
        self.w9 = RegisterAlias("w9", self.x9, width=4, offset=0)
        self.x10 = Register("x10", width=8)
        self.w10 = RegisterAlias("w10", self.x10, width=4, offset=0)
        self.x11 = Register("x11", width=8)
        self.w11 = RegisterAlias("w11", self.x11, width=4, offset=0)
        self.x12 = Register("x12", width=8)
        self.w12 = RegisterAlias("w12", self.x12, width=4, offset=0)
        self.x13 = Register("x13", width=8)
        self.w13 = RegisterAlias("w13", self.x13, width=4, offset=0)
        self.x14 = Register("x14", width=8)
        self.w14 = RegisterAlias("w14", self.x14, width=4, offset=0)
        self.x15 = Register("x15", width=8)
        self.w15 = RegisterAlias("w15", self.x15, width=4, offset=0)
        self.x16 = Register("x16", width=8)
        self.w16 = RegisterAlias("w16", self.x16, width=4, offset=0)
        self.x17 = Register("x17", width=8)
        self.w17 = RegisterAlias("w17", self.x17, width=4, offset=0)
        self.x18 = Register("x18", width=8)
        self.w18 = RegisterAlias("w18", self.x18, width=4, offset=0)
        self.x19 = Register("x19", width=8)
        self.w19 = RegisterAlias("w19", self.x19, width=4, offset=0)
        self.x20 = Register("x20", width=8)
        self.w20 = RegisterAlias("w20", self.x20, width=4, offset=0)
        self.x21 = Register("x21", width=8)
        self.w21 = RegisterAlias("w21", self.x21, width=4, offset=0)
        self.x22 = Register("x22", width=8)
        self.w22 = RegisterAlias("w22", self.x22, width=4, offset=0)
        self.x23 = Register("x23", width=8)
        self.w23 = RegisterAlias("w23", self.x23, width=4, offset=0)
        self.x24 = Register("x24", width=8)
        self.w24 = RegisterAlias("w24", self.x24, width=4, offset=0)
        self.x25 = Register("x25", width=8)
        self.w25 = RegisterAlias("w25", self.x25, width=4, offset=0)
        self.x26 = Register("x26", width=8)
        self.w26 = RegisterAlias("w26", self.x26, width=4, offset=0)
        self.x27 = Register("x27", width=8)
        self.w27 = RegisterAlias("w27", self.x27, width=4, offset=0)
        self.x28 = Register("x28", width=8)
        self.w28 = RegisterAlias("w28", self.x28, width=4, offset=0)
        self.x29 = Register("x29", width=8)
        self.w29 = RegisterAlias("w29", self.x29, width=4, offset=0)
        self.x30 = Register("x30", width=8)
        self.w30 = RegisterAlias("w30", self.x30, width=4, offset=0)

        # *** Special Registers ***
        # Program Counter
        self.pc = Register("pc", width=8)
        # Stack Pointer
        self.sp = Register("sp", width=8)
        self.wsp = RegisterAlias("wsp", self.sp, width=4, offset=0)
        # fp: Frame pointer; alias for x29
        self.fp = RegisterAlias("fp", self.x29, width=8, offset=0)
        # lr: Link register; alias for x30
        self.lr = RegisterAlias("lr", self.x30, width=8, offset=0)
        # Zero Register
        self.xzr = Register("xzr", width=8)
        self.wzr = RegisterAlias("wzr", self.xzr, width=4, offset=0)
        # sp_elX: Banked stack pointers for exception handlers
        self.sp_el0 = Register("sp_el0", width=8)
        self.sp_el1 = Register("sp_el1", width=8)
        self.sp_el2 = Register("sp_el2", width=8)
        self.sp_el3 = Register("sp_el3", width=8)

        # *** System Registers ***
        # NOTE: Here, the name indicates the lowest EL that can access the register.
        # NOTE: The Unicorn model is missing a boatload of other system control registers.

        # Condition code register
        self.fpcr = Register("fpcr", width=8)
        # Floating Point Status Register
        self.fpsr = Register("fpsr", width=8)
        # elr_elX: Banked Exception Link Registers for exception handlers.
        # TODO: Unicorn lists an "elr_el0", but the AArch64 docs don't...
        self.elr_el1 = Register("elr_el1", width=8)
        self.elr_el2 = Register("elr_el2", width=8)
        self.elr_el3 = Register("elr_el3", width=8)
        # esr_elX: Banked Exception Syndrome Registers for exception handlers.
        # TODO: Unicorn lists an "esr_el0", but the AArch64 docs don't...
        self.esr_el1 = Register("esr_el1", width=8)
        self.esr_el2 = Register("esr_el2", width=8)
        self.esr_el3 = Register("esr_el3", width=8)
        # far_elX: Banked Fault Address Registers for exception handlers.
        # TODO: Unicorn lists a "far_el0", but the AArch64 docs don't...
        self.far_el1 = Register("far_el1", width=8)
        self.far_el2 = Register("far_el2", width=8)
        self.far_el3 = Register("far_el3", width=8)
        # vbar_elX: Banked Vector Base Address Registers for exception handlers
        self.vbar_el1 = Register("vbar_el1", width=8)
        # NOTE: vbar_el0 and vbar_el1 are aliases for each other.
        # The Sleigh model only recognizes vbar_el1,
        # so it needs to be the "real" copy.
        self.vbar_el0 = RegisterAlias("vbar_el0", self.vbar_el1, width=8, offset=0)
        self.vbar_el2 = Register("vbar_el2", width=8)
        self.vbar_el3 = Register("vbar_el3", width=8)
        # Coprocessor Access Control Register
        self.cpacr_el1 = Register("cpacr_el1", width=8)
        # Memory Attribute Indirection Register
        # NOTE: There should be four of these.
        self.mair_el1 = Register("mair_el1", width=8)
        # Physical Address Register
        self.par_el1 = Register("par_el1", width=8)
        # Translation Table Zero Base Register
        self.ttbr0_el1 = Register("ttbr0_el1", width=8)
        # Translation Table One Base Register
        self.ttbr1_el1 = Register("ttbr1_el1", width=8)
        # Thread ID Register
        # NOTE: There should be four of these.
        self.tpidr_el0 = Register("tpidr_el0", width=8)
        self.tpidr_el1 = Register("tpidr_el1", width=8)
        # Userspace-visible Thread ID register
        self.tpidrro_el0 = Register("tpidrro_el0", width=8)

        # Scalar floating point registers
        self.q0 = Register("q0", width=16)
        self.d0 = RegisterAlias("d0", self.q0, width=8, offset=0)
        self.s0 = RegisterAlias("s0", self.q0, width=4, offset=0)
        self.h0 = RegisterAlias("h0", self.q0, width=2, offset=0)
        self.b0 = RegisterAlias("b0", self.q0, width=1, offset=0)
        self.q1 = Register("q1", width=16)
        self.d1 = RegisterAlias("d1", self.q1, width=8, offset=0)
        self.s1 = RegisterAlias("s1", self.q1, width=4, offset=0)
        self.h1 = RegisterAlias("h1", self.q1, width=2, offset=0)
        self.b1 = RegisterAlias("b1", self.q1, width=1, offset=0)
        self.q2 = Register("q2", width=16)
        self.d2 = RegisterAlias("d2", self.q2, width=8, offset=0)
        self.s2 = RegisterAlias("s2", self.q2, width=4, offset=0)
        self.h2 = RegisterAlias("h2", self.q2, width=2, offset=0)
        self.b2 = RegisterAlias("b2", self.q2, width=1, offset=0)
        self.q3 = Register("q3", width=16)
        self.d3 = RegisterAlias("d3", self.q3, width=8, offset=0)
        self.s3 = RegisterAlias("s3", self.q3, width=4, offset=0)
        self.h3 = RegisterAlias("h3", self.q3, width=2, offset=0)
        self.b3 = RegisterAlias("b3", self.q3, width=1, offset=0)
        self.q4 = Register("q4", width=16)
        self.d4 = RegisterAlias("d4", self.q4, width=8, offset=0)
        self.s4 = RegisterAlias("s4", self.q4, width=4, offset=0)
        self.h4 = RegisterAlias("h4", self.q4, width=2, offset=0)
        self.b4 = RegisterAlias("b4", self.q4, width=1, offset=0)
        self.q5 = Register("q5", width=16)
        self.d5 = RegisterAlias("d5", self.q5, width=8, offset=0)
        self.s5 = RegisterAlias("s5", self.q5, width=4, offset=0)
        self.h5 = RegisterAlias("h5", self.q5, width=2, offset=0)
        self.b5 = RegisterAlias("b5", self.q5, width=1, offset=0)
        self.q6 = Register("q6", width=16)
        self.d6 = RegisterAlias("d6", self.q6, width=8, offset=0)
        self.s6 = RegisterAlias("s6", self.q6, width=4, offset=0)
        self.h6 = RegisterAlias("h6", self.q6, width=2, offset=0)
        self.b6 = RegisterAlias("b6", self.q6, width=1, offset=0)
        self.q7 = Register("q7", width=16)
        self.d7 = RegisterAlias("d7", self.q7, width=8, offset=0)
        self.s7 = RegisterAlias("s7", self.q7, width=4, offset=0)
        self.h7 = RegisterAlias("h7", self.q7, width=2, offset=0)
        self.b7 = RegisterAlias("b7", self.q7, width=1, offset=0)
        self.q8 = Register("q8", width=16)
        self.d8 = RegisterAlias("d8", self.q8, width=8, offset=0)
        self.s8 = RegisterAlias("s8", self.q8, width=4, offset=0)
        self.h8 = RegisterAlias("h8", self.q8, width=2, offset=0)
        self.b8 = RegisterAlias("b8", self.q8, width=1, offset=0)
        self.q9 = Register("q9", width=16)
        self.d9 = RegisterAlias("d9", self.q9, width=8, offset=0)
        self.s9 = RegisterAlias("s9", self.q9, width=4, offset=0)
        self.h9 = RegisterAlias("h9", self.q9, width=2, offset=0)
        self.b9 = RegisterAlias("b9", self.q9, width=1, offset=0)
        self.q10 = Register("q10", width=16)
        self.d10 = RegisterAlias("d10", self.q10, width=8, offset=0)
        self.s10 = RegisterAlias("s10", self.q10, width=4, offset=0)
        self.h10 = RegisterAlias("h10", self.q10, width=2, offset=0)
        self.b10 = RegisterAlias("b10", self.q10, width=1, offset=0)
        self.q11 = Register("q11", width=16)
        self.d11 = RegisterAlias("d11", self.q11, width=8, offset=0)
        self.s11 = RegisterAlias("s11", self.q11, width=4, offset=0)
        self.h11 = RegisterAlias("h11", self.q11, width=2, offset=0)
        self.b11 = RegisterAlias("b11", self.q11, width=1, offset=0)
        self.q12 = Register("q12", width=16)
        self.d12 = RegisterAlias("d12", self.q12, width=8, offset=0)
        self.s12 = RegisterAlias("s12", self.q12, width=4, offset=0)
        self.h12 = RegisterAlias("h12", self.q12, width=2, offset=0)
        self.b12 = RegisterAlias("b12", self.q12, width=1, offset=0)
        self.q13 = Register("q13", width=16)
        self.d13 = RegisterAlias("d13", self.q13, width=8, offset=0)
        self.s13 = RegisterAlias("s13", self.q13, width=4, offset=0)
        self.h13 = RegisterAlias("h13", self.q13, width=2, offset=0)
        self.b13 = RegisterAlias("b13", self.q13, width=1, offset=0)
        self.q14 = Register("q14", width=16)
        self.d14 = RegisterAlias("d14", self.q14, width=8, offset=0)
        self.s14 = RegisterAlias("s14", self.q14, width=4, offset=0)
        self.h14 = RegisterAlias("h14", self.q14, width=2, offset=0)
        self.b14 = RegisterAlias("b14", self.q14, width=1, offset=0)
        self.q15 = Register("q15", width=16)
        self.d15 = RegisterAlias("d15", self.q15, width=8, offset=0)
        self.s15 = RegisterAlias("s15", self.q15, width=4, offset=0)
        self.h15 = RegisterAlias("h15", self.q15, width=2, offset=0)
        self.b15 = RegisterAlias("b15", self.q15, width=1, offset=0)
        self.q16 = Register("q16", width=16)
        self.d16 = RegisterAlias("d16", self.q16, width=8, offset=0)
        self.s16 = RegisterAlias("s16", self.q16, width=4, offset=0)
        self.h16 = RegisterAlias("h16", self.q16, width=2, offset=0)
        self.b16 = RegisterAlias("b16", self.q16, width=1, offset=0)
        self.q17 = Register("q17", width=16)
        self.d17 = RegisterAlias("d17", self.q17, width=8, offset=0)
        self.s17 = RegisterAlias("s17", self.q17, width=4, offset=0)
        self.h17 = RegisterAlias("h17", self.q17, width=2, offset=0)
        self.b17 = RegisterAlias("b17", self.q17, width=1, offset=0)
        self.q18 = Register("q18", width=16)
        self.d18 = RegisterAlias("d18", self.q18, width=8, offset=0)
        self.s18 = RegisterAlias("s18", self.q18, width=4, offset=0)
        self.h18 = RegisterAlias("h18", self.q18, width=2, offset=0)
        self.b18 = RegisterAlias("b18", self.q18, width=1, offset=0)
        self.q19 = Register("q19", width=16)
        self.d19 = RegisterAlias("d19", self.q19, width=8, offset=0)
        self.s19 = RegisterAlias("s19", self.q19, width=4, offset=0)
        self.h19 = RegisterAlias("h19", self.q19, width=2, offset=0)
        self.b19 = RegisterAlias("b19", self.q19, width=1, offset=0)
        self.q20 = Register("q20", width=16)
        self.d20 = RegisterAlias("d20", self.q20, width=8, offset=0)
        self.s20 = RegisterAlias("s20", self.q20, width=4, offset=0)
        self.h20 = RegisterAlias("h20", self.q20, width=2, offset=0)
        self.b20 = RegisterAlias("b20", self.q20, width=1, offset=0)
        self.q21 = Register("q21", width=16)
        self.d21 = RegisterAlias("d21", self.q21, width=8, offset=0)
        self.s21 = RegisterAlias("s21", self.q21, width=4, offset=0)
        self.h21 = RegisterAlias("h21", self.q21, width=2, offset=0)
        self.b21 = RegisterAlias("b21", self.q21, width=1, offset=0)
        self.q22 = Register("q22", width=16)
        self.d22 = RegisterAlias("d22", self.q22, width=8, offset=0)
        self.s22 = RegisterAlias("s22", self.q22, width=4, offset=0)
        self.h22 = RegisterAlias("h22", self.q22, width=2, offset=0)
        self.b22 = RegisterAlias("b22", self.q22, width=1, offset=0)
        self.q23 = Register("q23", width=16)
        self.d23 = RegisterAlias("d23", self.q23, width=8, offset=0)
        self.s23 = RegisterAlias("s23", self.q23, width=4, offset=0)
        self.h23 = RegisterAlias("h23", self.q23, width=2, offset=0)
        self.b23 = RegisterAlias("b23", self.q23, width=1, offset=0)
        self.q24 = Register("q24", width=16)
        self.d24 = RegisterAlias("d24", self.q24, width=8, offset=0)
        self.s24 = RegisterAlias("s24", self.q24, width=4, offset=0)
        self.h24 = RegisterAlias("h24", self.q24, width=2, offset=0)
        self.b24 = RegisterAlias("b24", self.q24, width=1, offset=0)
        self.q25 = Register("q25", width=16)
        self.d25 = RegisterAlias("d25", self.q25, width=8, offset=0)
        self.s25 = RegisterAlias("s25", self.q25, width=4, offset=0)
        self.h25 = RegisterAlias("h25", self.q25, width=2, offset=0)
        self.b25 = RegisterAlias("b25", self.q25, width=1, offset=0)
        self.q26 = Register("q26", width=16)
        self.d26 = RegisterAlias("d26", self.q26, width=8, offset=0)
        self.s26 = RegisterAlias("s26", self.q26, width=4, offset=0)
        self.h26 = RegisterAlias("h26", self.q26, width=2, offset=0)
        self.b26 = RegisterAlias("b26", self.q26, width=1, offset=0)
        self.q27 = Register("q27", width=16)
        self.d27 = RegisterAlias("d27", self.q27, width=8, offset=0)
        self.s27 = RegisterAlias("s27", self.q27, width=4, offset=0)
        self.h27 = RegisterAlias("h27", self.q27, width=2, offset=0)
        self.b27 = RegisterAlias("b27", self.q27, width=1, offset=0)
        self.q28 = Register("q28", width=16)
        self.d28 = RegisterAlias("d28", self.q28, width=8, offset=0)
        self.s28 = RegisterAlias("s28", self.q28, width=4, offset=0)
        self.h28 = RegisterAlias("h28", self.q28, width=2, offset=0)
        self.b28 = RegisterAlias("b28", self.q28, width=1, offset=0)
        self.q29 = Register("q29", width=16)
        self.d29 = RegisterAlias("d29", self.q29, width=8, offset=0)
        self.s29 = RegisterAlias("s29", self.q29, width=4, offset=0)
        self.h29 = RegisterAlias("h29", self.q29, width=2, offset=0)
        self.b29 = RegisterAlias("b29", self.q29, width=1, offset=0)
        self.q30 = Register("q30", width=16)
        self.d30 = RegisterAlias("d30", self.q30, width=8, offset=0)
        self.s30 = RegisterAlias("s30", self.q30, width=4, offset=0)
        self.h30 = RegisterAlias("h30", self.q30, width=2, offset=0)
        self.b30 = RegisterAlias("b30", self.q30, width=1, offset=0)
        self.q31 = Register("q31", width=16)
        self.d31 = RegisterAlias("d31", self.q31, width=8, offset=0)
        self.s31 = RegisterAlias("s31", self.q31, width=4, offset=0)
        self.h31 = RegisterAlias("h31", self.q31, width=2, offset=0)
        self.b31 = RegisterAlias("b31", self.q31, width=1, offset=0)
        # *** Vector registers vX ***
        # I'm not sure how to model these.
