name: Pull Request

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopen, edited]

jobs:
  Test:
    runs-on: smallworld-arc
    container:
      image: ubuntu:latest
      env:
        TZ: UTC
    strategy:
      matrix:
        include:
          - testsuite: BlockTests
          - testsuite: BranchTests
          - testsuite: CallTests
          - testsuite: DMATests
          - testsuite: DocumentationTests
          - testsuite: ElfTests
          - testsuite: FloatsTests
          - testsuite: FuzzTests
          - testsuite: HookingTests
          - testsuite: RecursionTests
          - testsuite: SquareTests
          - testsuite: StackTests
          - testsuite: StrlenTests
          - testsuite: StructureTests
          - testsuite: SyscallTests
    steps:
      - name: preinit
        run: |
          apt-get update
          apt-get install -y git-lfs
      - uses: actions/checkout@v3
        with:
          lfs: true
      - name: Check Title
        env:
          TITLE: ${{ github.event.pull_request.title }}
        run: |
          bash .github/workflows/scripts/conventional.sh "$TITLE"
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Dependencies
        run: |
          apt-get update
          apt-get install -y $(cat ./tests/dependencies/apt.txt)
          apt-get install -y ./tests/dependencies/*.deb
          python -m pip install ./tests/dependencies/*.whl
      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -e .[development] -c constraints.txt
      - name: Build
        run: |
          make -C tests
      - name: Test
        run: |
          python tests/unit.py
          python tests/integration.py ${{ matrix.testsuite }}
  Results:
    runs-on: smallworld-arc
    needs: Test
    if: always()
    steps:
      - name: All tests OK
        if: ${{ !(contains(needs.*.results, 'failure')) }}
        run: exit 0
      - name: Tests Failed
        if: ${{ contains(needs.*.results, 'failure') }}
        run: exit 1
