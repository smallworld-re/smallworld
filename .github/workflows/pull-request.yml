name: Pull Request
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopen, edited]

env:
  REGISTRY: harbor.harbor.svc.cluster.local
  TZ: UTC
  SCRATCH: /home/runner/_shared

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  # cancel-in-progress: true

jobs:
  Lint:
    runs-on: smallworld-arc
    permissions:
      contents: write
    outputs:
      changes_detected: ${{ steps.ac.outputs.changes_detected }}

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.BOT_TOKEN }}

      - name: Install Lint Tools
        run: |
          pip install --upgrade pip
          pip install $(grep isort= constraints.txt)
          pip install $(grep black= constraints.txt)
          pip install $(grep flake8= constraints.txt)
          pip install $(grep mypy= constraints.txt)

      - name: Format
        run: |
          isort . --profile black
          black ./

      - id: ac
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "style: isort and black"
          commit_author: GitHub Actions <actions@github.com>

      - name: Lint
        if: steps.ac.outputs.changes_detected == 'false'
        run: |
          isort --check --profile black .
          black --check ./
          flake8 ./
          mypy --explicit-package-bases --ignore-missing-imports ./

      - name: Check Title
        if: steps.ac.outputs.changes_detected == 'false'
        env:
          TITLE: ${{ github.event.pull_request.title }}
        run: bash .github/workflows/scripts/conventional.sh "$TITLE"

      - name: Build Artifacts
        if: steps.ac.outputs.changes_detected == 'false'
        run: |
          cd tests
          make -j$(nproc)
          cd elf_core
          make -j$(nproc)

      - name: Save Repo
        if: steps.ac.outputs.changes_detected == 'false'
        run: |
          cd ..
          tar cfz smallworld_${{ github.sha }}.tar.gz smallworld/
          mv smallworld_${{ github.sha }}.tar.gz $SCRATCH

  Unit-Test:
    runs-on: smallworld-arc
    needs: Lint
    if: needs.Lint.outputs.changes_detected == 'false'
    steps:
      - name: Copy Repo
        run: |
          cp $SCRATCH/smallworld_${{ github.sha }}.tar.gz .
          tar xf smallworld_${{ github.sha }}.tar.gz
      - name: Run Unit Tests
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          cd smallworld/
          pip install -e .[development] -c constraints.txt
          cd tests
          python3 unit.py

  Integration-Test:
    runs-on: smallworld-arc
    needs: Lint
    if: needs.Lint.outputs.changes_detected == 'false'
    strategy:
      matrix:
        testsuite:
          - BranchTests
          - CallTests
          - DMATests
          - ElfTests
          - FloatsTests
          - FuzzTests
          - LinkElfTests
          - HookingTests
          - MemhookTests
          - PETests
          - RelaTests
          - SquareTests
          - StackTests
          - StrlenTests
          - SyscallTests
        platform:
          - aarch64
          - amd64
          - armel
          - armhf
          - i386
          - mips
          - mipsel
          - mips64
          - mips64el
          - ppc
          - ppc64
          - riscv64
          - xtensa
        emulator:
          - angr
          - ghidra
          - panda
          - unicorn
        exclude:
          - platform: mips64
            emulator: unicorn
          - platform: mips64el
            emulator: unicorn
          - platform: ppc
            emulator: unicorn
          - platform: ppc64
            emulator: panda
          - platform: ppc64
            emulator: unicorn
          - platform: riscv64
            emulator: panda
          - platform: riscv64
            emulator: unicorn
          - platform: xtensa
            emulator: panda
          - platform: xtensa
            emulator: unicorn
          - testsuite: FloatsTests
            emulator: panda
          - testsuite: FloatsTests
            platform: armel
          - testsuite: FloatsTests
            platform: mips
          - testsuite: FloatsTests
            platform: mipsel
          - testsuite: FloatsTests
            platform: mips64
          - testsuite: FloatsTests
            platform: mips64el
          - testsuite: FloatsTests
            platform: ppc
          - testsuite: FloatsTests
            platform: ppc64
          - testsuite: FloatsTests
            platform: riscv64
          - testsuite: FloatsTests
            platform: xtensa
          - testsuite: FloatsTests
            platform: armhf
            emulator: unicorn
          - testsuite: FuzzTests
            emulator: angr
          - testsuite: FuzzTests
            emulator: ghidra
          - testsuite: FuzzTests
            emulator: panda
          - testsuite: LinkElfTests
            platform: ppc64
          - testsuite: LinkElfTests
            platform: xtensa
          - testsuite: LinkElfTests
            platform: ppc64
          - testsuite: LinkElfTests
            platform: xtensa
          - testsuite: SyscallTests
            emulator: ghidra
          - testsuite: SyscallTests
            emulator: panda
          - testsuite: SyscallTests
            emulator: unicorn
        include:
          - testsuite: BlockTests
            platform: amd64
            emulator: panda
          - testsuite: BlockTests
            platform: amd64
            emulator: unicorn
          - testsuite: PETests
            platform: amd64
          - testsuite: PETests
            platform: i386 
    steps:
      - name: Copy Repo
        run: |
          cp $SCRATCH/smallworld_${{ github.sha }}.tar.gz .
          tar xf smallworld_${{ github.sha }}.tar.gz
      - name: Run Integration Tests
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          cd smallworld/
          pip install -e .[development] -c constraints.txt
          cd tests
          python3 integration.py -v ${{ matrix.testsuite }}.test_${{ matrix.platform }}_${{ matrix.emulator }}
  
  Extra-Test:
    # Extra functionality tests
    # Runs full test suites; these are all small, and don't have a consistent nomenclature
    runs-on: smallworld-arc
    needs: Lint
    if: needs.Lint.outputs.changes_detected == 'false'
    strategy:
      matrix:
        testsuite:
          - ColorizerTests
          - DocumentationTests
          - RTOSDemoTests
          - StructureTests
          - SymbolicTests
          - TraceExecutionTests
    steps:
      - name: Copy Repo
        run: |
          cp $SCRATCH/smallworld_${{ github.sha }}.tar.gz .
          tar xf smallworld_${{ github.sha }}.tar.gz
      - name: Run Integration Tests
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          cd smallworld/
          pip install -e .[development] -c constraints.txt
          cd tests
          python3 integration.py -v ${{ matrix.testsuite }}
  
  Library-Test:
    # Library model test suite
    # Test cases are defined as {testsuite}.test_{platform}
    runs-on: smallworld-arc
    needs: Lint
    if: needs.Lint.outputs.changes_detected == 'false'
    strategy:
      matrix:
        testsuite:
          - C99AbortTests
          - C99AbsTests
          - C99AsctimeTests
          - C99AtexitTests
          - C99AtoiTests
          - C99AtollTests
          - C99AtolTests
          - C99CallocTests
          - C99ClearerrTests
          - C99ClockTests
          - C99CtimeTests
          - C99DifftimeTests
          - C99ExitTests
          - C99FcloseTests
          - C99FeofTests
          - C99FflushTests
          - C99FgetcTests
          - C99FgetposTests
          - C99FgetsTests
          - C99FopenTests
          - C99FprintfTests
          - C99FputcTests
          - C99FputsTests
          - C99FreadTests
          - C99FreeTests
          - C99FscanfTests
          - C99FseekTests
          - C99FsetposTests
          - C99FtellTests
          - C99FwriteTests
          - C99GetcharTests
          - C99GetcTests
          - C99GetenvTests
          - C99GetsTests
          - C99GmtimeTests
          - C99LabsTests
          - C99LlabsTests
          - C99LocaltimeTests
          - C99MallocTests
          - C99MemcmpTests
          - C99MemcpyTests
          - C99MemmoveTests
          - C99MemsetTests
          - C99MktimeTests
          - C99PrintfTests
          - C99PutcharTests
          - C99PutcTests
          - C99PutsTests
          - C99RandTests
          - C99ReallocTests
          - C99RemoveTests
          - C99RenameTests
          - C99RewindTests
          - C99ScanfTests
          - C99SignalTests
          - C99SnprintfTests
          - C99SprintfTests
          - C99SrandTests
          - C99SscanfTests
          - C99StrcatTests
          - C99StrchrTests
          - C99StrcmpTests
          - C99StrcpyTests
          - C99StrcspnTests
          - C99StrerrorTests
          - C99StrftimeTests
          - C99StrlenTests
          - C99StrncatTests
          - C99StrncmpTests
          - C99StrncpyTests
          - C99StrpbrkTests
          - C99StrrchrTests
          - C99StrspnTests
          - C99StrstrTests
          - C99StrtokTests
          - C99SystemTests
          - C99TimeTests
          - C99TmpfileTests
          - C99TmpnamTests
          - C99UngetcTests
          - ElfCoreTests
          - POSIXBasenameTests
          - POSIXBsdSignalTests
          - POSIXDirnameTests
          - POSIXPthreadSigmaskTests
          - POSIXSigactionTests
          - POSIXSigaddsetTests
          - POSIXSigdelsetTests
          - POSIXSigemptysetTests
          - POSIXSigfillsetTests
          - POSIXSigpendingTests
          - POSIXSigprocmaskTests
          - SysVModelTests
        platform:
          - aarch64
          - amd64
          - armel
          - armhf
          - armel
          - armhf
          - i386
          - mips
          - mipsel
          - mips64
          - mips64el
          - ppc
          - riscv64
    steps:
      - name: Copy Repo
        run: |
          cp $SCRATCH/smallworld_${{ github.sha }}.tar.gz .
          tar xf smallworld_${{ github.sha }}.tar.gz
      - name: Run Integration Tests
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: |
          cd smallworld/
          pip install -e .[development] -c constraints.txt
          cd tests
          python3 integration.py -v ${{ matrix.testsuite }}.test_${{ matrix.platform }}_${{ matrix.emulator }}

  Results:
    runs-on: smallworld-arc
    needs: [Lint, Unit-Test, Integration-Test, Extra-Test, Library-Test]
    if: always()
    steps:
      - name: Formatter committed – new run will verify
        if: needs.Lint.outputs.changes_detected == 'true'
        run: exit 1

      - name: All tests OK
        if: needs.Lint.outputs.changes_detected == 'false' && !contains(needs.*.result, 'failure')
        run: exit 0

      - name: Tests Failed
        if: needs.Lint.outputs.changes_detected == 'false' && contains(needs.*.result, 'failure')
        run: exit 1

      - name: Cleanup
        run: rm $SCRATCH/smallworld_${{ github.sha }}.tar.gz
