name: Pull Request

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopen, edited]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: preinit
        run: |
          apt-get update
          apt-get install -y git-lfs
      - uses: actions/checkout@v3
        with:
          lfs: true
      - name: Check Title
        env:
          TITLE: ${{ github.event.pull_request.title }}
        run: |
          bash .github/workflows/scripts/conventional.sh "$TITLE"
      - name: Build Container
        run: |
          docker build . -t smallworld
      - name: Save Container
        run: |
          docker save smallworld:latest -o image.tar  
      - uses: actions/upload-artifact@v4
        with:
          name: smallworld-docker
          path: image.tar

  Unit-Test:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: smallworld-docker
          path: image.tar
      - name: Import Container
        run: |
          docker load -i image.tar
      - name: Run Unit Tests
        run: |
          docker run -it -w /opt/smallworld/tests smallworld:latest python3 unit.py
            
  Integration-Test:
    runs-on: ubuntu-latest
    needs: Build
    strategy:
      matrix:
        include:
          - testsuite: BlockTests
          - testsuite: BranchTests
          - testsuite: CallTests
          - testsuite: DMATests
          - testsuite: DocumentationTests
          - testsuite: ElfTests
          - testsuite: FloatsTests
          - testsuite: FuzzTests
          - testsuite: HookingTests
          - testsuite: SquareTests
          - testsuite: StackTests
          - testsuite: StrlenTests
          - testsuite: StructureTests
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: smallworld-docker
          path: image.tar
      - name: Import Container
        run: |
          docker load -i image.tar
      - name: Run Integration Tests
        run: |
          docker run -it -w /opt/smallworld/tests smallworld:latest python3 integration.py ${{ matrix.testsuite }}
  
  Results:
    runs-on: ubuntu-latest
    needs: Build
    if: always()
    steps:
      - name: All tests OK
        if: ${{ !(contains(needs.*.results, 'failure')) }}
        run: exit 0
      - name: Tests Failed
        if: ${{ contains(needs.*.results, 'failure') }}
        run: exit 1
